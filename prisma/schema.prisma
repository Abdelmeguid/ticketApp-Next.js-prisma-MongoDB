// // // This is your Prisma schema file,
// // // learn more about it in the docs: https://pris.ly/d/prisma-schema

// // generator client {
// //   provider = "prisma-client-js"
// // }

// // datasource db {
// //   provider     = "mysql"
// //   url          = env("DATABASE_URL")
// //   relationMode = "prisma"
// // }

// // model Ticket {
// //   id               Int      @id @default(autoincrement())
// //   title            String   @db.VarChar(255)
// //   description      String   @db.Text
// //   status           Status   @default(OPEN)
// //   priority         Priority @default(MEDIUM)
// //   createdAt        DateTime @default(now())
// //   updatedAt        DateTime @updatedAt
// //   //Int?: The data type for the assignedToUserId field, which is an optional integer (nullable). CGPt
// //   assignedToUserId Int?
// //   //from below you can find all data of the user which assigned to him the ticket like his username and his name 
// //   assignedToUser   User?    @relation(fields: [assignedToUserId], references: [id])
// //   assignedToUserName String?
// // }

// // enum Status {
// //   OPEN
// //   STARTED
// //   CLOSED
// // }

// // enum Priority {
// //   LOW
// //   MEDIUM
// //   HIGH
// // }

// // model User {
// //   id              Int      @id @default(autoincrement())
// //   name            String
// //   username        String   @unique
// //   password        String
// //   role            Role     @default(USER)
// //   assignedTickets Ticket[]
// // }

// // enum Role {
// //   ADMIN
// //   TECH
// //   USER
// // }


// /////////////////////////////////////////////////////////////////////////////////////////////////////////

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Ticket {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  title            String
  description      String
  status           Status   @default(OPEN)
  priority         Priority @default(MEDIUM)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  assignedToUserId String?  @map("assignedToUserId")
  assignedToUser   User?    @relation("UserAssignedTickets", fields: [assignedToUserId], references: [id])
  assignedToUserName String?

  @@map("tickets") // Map this model to the "tickets" collection
}

enum Status {
  OPEN
  STARTED
  CLOSED
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}

model User {
  
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  username        String   @unique
  password        String
  role            Role     @default(USER)
  assignedTickets Ticket[]  @relation("UserAssignedTickets")

  @@map("users")  // Map this model to the "users" collection
}



enum Role {
  ADMIN
  TECH
  USER
}




